# Automatically build the project and run any configured tests for every push and submitted pull request.
# This can help catch issues that only occur on certain platforms or Java versions, and provides a first line of defense against bad commits.
# This is the exact same as the build-push workflow, but it uploads the produced JAR files.

name: Build Iridium (Distribution)
on:
  release:
    types:
      - published

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # Run on these operating systems
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          cache: gradle
      - name: Make Gradle Wrapper Executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew build -Pbuild.distribution=true
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Iridium CI Artifacts
          path: build/libs/
          retention-days: 30