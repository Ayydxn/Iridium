plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id 'org.ajoberstar.grgit' version '5.2.1'
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "org.quiltmc:quilt-mappings:${rootProject.minecraft_version}+build.${rootProject.quilt_mappings_version}:intermediary-v2"
    }

    repositories {
        maven {
            name "NeoForged"
            url "https://maven.neoforged.net/releases/"
        }

        maven {
            name "Quilt"
            url "https://maven.quiltmc.org/repository/release"
        }
    }

    processResources {
        def expandProps = [
                "name": rootProject.mod_name,
                "version": rootProject.mod_version,
                "description": rootProject.mod_description,
                "id": rootProject.mod_id,
                "author": rootProject.mod_author,
                "icon_path": rootProject.icon_path,
                "issue_tracker_url": rootProject.issue_tracker_url,
                "license": rootProject.license,
                "minecraft_version": rootProject.minecraft_version,
                "minecraft_version_range": rootProject.minecraft_version_range,
                "architectury_version": rootProject.architectury_version,
                "architectury_version_range": rootProject.architectury_version_range,
                "fabric_loader_version": rootProject.fabric_loader_version,
                "fabric_version": rootProject.fabric_api_version,
                "neoforge_version": rootProject.neoforge_version,
                "neoforge_version_range": rootProject.neoforge_version_range
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand expandProps
        }

        inputs.properties(expandProps)
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    version = "${rootProject.mod_version}${getGitVersionMetadata()}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

def getGitVersionMetadata() {
    if (project.hasProperty("build.distribution")) {
        return ""
    }

    if (grgit != null) {
        def head = grgit.head()
        def id = head.abbreviatedId

        // Flag the build if the build tree is not clean
        if (!grgit.status().clean) {
            id += "-dirty"
        }

        return "+git.${id}"
    }

    // No tracking information could be found about the build
    return "+unknown"
}
